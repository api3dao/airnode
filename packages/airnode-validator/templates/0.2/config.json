{
  "ois": {
    "__arrayItem": {
      "__template": "../1.0/ois.json",
      "apiSpecifications": {
        "components": {
          "securitySchemes": {}
        }
      }
    }
  },
  "triggers": {
    "rrp": {
      "__arrayItem": {
        "endpointId": {
          "__regexp": "^0x[a-fA-F0-9]{64}$"
        },
        "oisTitle": {
          "__type": "string"
        },
        "endpointName": {
          "__type": "string"
        },
        "__conditions": [
          {
            "__if": {
              "oisTitle": ".*"
            },
            "__rootThen": {
              "ois": {
                "__any": {
                  "title": {
                    "__regexp": "^__match$"
                  },
                  "endpoints": {
                    "__any": {
                      "name": {
                        "__regexp": "[['endpointName']]"
                      }
                    }
                  }
                }
              }
            },
            "__catch": {
              "__message": "OIS \"[['oisTitle']]\" must contain endpoint \"'[['endpointName']]\", as it is specified in {{0}}.{{1}}.{{2}}.{{3}}"
            }
          }
        ]
      }
    }
  },
  "chains": {
    "__arrayItem": {
      "id": {
        "__type": "string"
      },
      "type": {
        "__regexp": "^evm$",
        "__catch": {
          "__message": "__fullPath: Currently only \"evm\" is supported"
        }
      },
      "providers": {
        "__objectItem": {
          "url": {
            "__regexp": "^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)$"
          }
        }
      },
      "contracts": {
        "AirnodeRrp": {
          "__regexp": "^0x[a-fA-F0-9]{40}$"
        }
      },
      "authorizers": {
        "__arrayItem": {
          "__regexp": "^0x[a-fA-F0-9]{40}$"
        }
      }
    }
  },
  "nodeSettings": {
    "nodeVersion": {
      "__regexp": "^0\\.2\\.[0-9]+$",
      "__catch": {
        "__level": "warning"
      }
    },
    "cloudProvider": {
      "__regexp": "^(aws|local)$",
      "__catch": {
        "__message": "__fullPath: Allowed values are aws or local"
      }
    },
    "region": {
      "__type": "string"
    },
    "stage": {
      "__regexp": "^[a-zA-Z0-9-_]{1,16}$",
      "__catch": {
        "__message": "__fullPath can contain only alphanumeric characters, '-' or '_' and cannot be longer than 16 characters"
      }
    },
    "logFormat": {
      "__regexp": "^(json|plain)$",
      "__catch": {
        "__message": "__fullPath: Allowed values are \"json\" or \"plain\""
      }
    },
    "logLevel": {
      "__regexp": "^(DEBUG|INFO|WARN|ERROR)$",
      "__catch": {
        "__message": "__fullPath: Allowed values are \"DEBUG\", \"INFO\", \"WARN\" or \"ERROR\""
      }
    },
    "airnodeWalletMnemonic": {
      "__type": "string"
    },
    "heartbeat": {
      "enabled": {
        "__type": "boolean"
      },
      "__conditions": [
        {
          "__if": {
            "enabled": true
          },
          "__then": {
            "url": {},
            "apiKey": {},
            "id": {}
          },
          "__catch": {
            "__message": "{{0}}.{{1}}: If heartbeat is enabled parameters url, apiKey and id are required"
          }
        }
      ],
      "__optional": {
        "url": {
          "__regexp": "^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)$"
        },
        "apiKey": {
          "__type": "string"
        },
        "id": {
          "__type": "string"
        }
      }
    },
    "httpGateway": {
      "enabled": {
        "__type": "boolean"
      },
      "__conditions": [
        {
          "__if": {
            "enabled": true
          },
          "__then": {
            "apiKey": {}
          },
          "__catch": {
            "__message": "{{0}}.{{1}}: If httpGateway is enabled parameter apiKey is required"
          }
        }
      ],
      "__optional": {
        "apiKey": {
          "__regexp": "^.{30,60}$",
          "__catch": {
            "__message": "__fullPath: The key must have a length of between 30 - 120 characters."
          }
        }
      }
    }
  },
  "apiCredentials": {
    "__arrayItem": {
      "oisTitle": {
        "__type": "string"
      },
      "securitySchemeName": {
        "__type": "string"
      },
      "securitySchemeValue": {
        "__type": "string"
      },
      "__conditions": [
        {
          "__if": {
            "oisTitle": ".*"
          },
          "__rootThen": {
            "ois": {
              "__any": {
                "title": {
                  "__regexp": "^__match$"
                },
                "apiSpecifications": {
                  "components": {
                    "securitySchemes": {
                      "[['securitySchemeName']]": {}
                    }
                  }
                }
              }
            }
          },
          "__catch": {
            "__message": "OIS \"[['oisTitle']]\" must contain security scheme \"[['securitySchemeName']]\", as it is specified in {{0}}.{{1}}"
          }
        }
      ]
    }
  }
}
