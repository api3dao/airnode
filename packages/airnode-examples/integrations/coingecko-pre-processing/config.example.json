{
  "chains": [
    {
      "maxConcurrency": 100,
      "authorizers": {
        "requesterEndpointAuthorizers": [],
        "crossChainRequesterAuthorizers": [],
        "requesterAuthorizersWithErc721": [],
        "crossChainRequesterAuthorizersWithErc721": []
      },
      "authorizations": {
        "requesterEndpointAuthorizations": {}
      },
      "contracts": {
        "AirnodeRrp": "0x5FbDB2315678afecb367f032d93F642f64180aa3"
      },
      "id": "31337",
      "providers": {
        "exampleProvider": {
          "url": "${PROVIDER_URL}"
        }
      },
      "type": "evm",
      "options": {
        "fulfillmentGasLimit": 500000,
        "gasPriceOracle": [
          {
            "gasPriceStrategy": "latestBlockPercentileGasPrice",
            "percentile": 60,
            "minTransactionCount": 20,
            "pastToCompareInBlocks": 20,
            "maxDeviationMultiplier": 2
          },
          {
            "gasPriceStrategy": "providerRecommendedGasPrice",
            "recommendedGasPriceMultiplier": 1.2
          },
          {
            "gasPriceStrategy": "constantGasPrice",
            "gasPrice": {
              "value": 10,
              "unit": "gwei"
            }
          }
        ]
      }
    }
  ],
  "nodeSettings": {
    "cloudProvider": {
      "type": "local"
    },
    "airnodeWalletMnemonic": "${AIRNODE_WALLET_MNEMONIC}",
    "heartbeat": {
      "enabled": false
    },
    "httpGateway": {
      "enabled": false
    },
    "httpSignedDataGateway": {
      "enabled": false
    },
    "oevGateway": {
      "enabled": false
    },
    "logFormat": "plain",
    "logLevel": "DEBUG",
    "nodeVersion": "0.13.0",
    "stage": "dev"
  },
  "triggers": {
    "rrp": [
      {
        "endpointId": "0x642598611f0dcbe389079bf555108513e3e8a15991887bb61126b7200f13c666",
        "oisTitle": "CoinGecko history data request",
        "endpointName": "coinHistoryData",
        "cacheResponses": false
      }
    ],
    "http": [],
    "httpSignedData": []
  },
  "templates": [],
  "ois": [
    {
      "oisFormat": "2.2.1",
      "title": "CoinGecko history data request",
      "version": "1.0.0",
      "apiSpecifications": {
        "servers": [
          {
            "url": "https://api.coingecko.com/api/v3"
          }
        ],
        "paths": {
          "/coins/{id}/history": {
            "get": {
              "parameters": [
                {
                  "in": "path",
                  "name": "id"
                },
                {
                  "in": "query",
                  "name": "date"
                },
                {
                  "in": "query",
                  "name": "localization"
                }
              ]
            }
          }
        },
        "components": {
          "securitySchemes": {}
        },
        "security": {}
      },
      "endpoints": [
        {
          "name": "coinHistoryData",
          "operation": {
            "method": "get",
            "path": "/coins/{id}/history"
          },
          "fixedOperationParameters": [
            {
              "operationParameter": {
                "in": "query",
                "name": "localization"
              },
              "value": "false"
            }
          ],
          "reservedParameters": [
            {
              "name": "_type",
              "fixed": "int256"
            },
            {
              "name": "_path",
              "fixed": "market_data.current_price.usd"
            },
            {
              "name": "_times",
              "fixed": "1000000"
            }
          ],
          "parameters": [
            {
              "name": "coinId",
              "operationParameter": {
                "in": "path",
                "name": "id"
              }
            },
            {
              "name": "unixTimestamp",
              "operationParameter": {
                "in": "query",
                "name": "date"
              }
            }
          ],
          "preProcessingSpecifications": [
            {
              "environment": "Node",
              "timeoutMs": 5000,
              "value": "\n                const rawDate = new Date(input.unixTimestamp * 1000);\n                const day = rawDate.getDate().toString().padStart(2, '0');\n                const month = (rawDate.getMonth() + 1).toString().padStart(2, '0'); // Months start at 0\n                const year = rawDate.getFullYear();\n\n                const formattedDate = day + '-' + month + '-' + year;\n                const output = {...input, unixTimestamp: formattedDate};\n\n                console.log(`[Pre-processing snippet]: Formatted \\${input.unixTimestamp} to \\${formattedDate}.`)\n              "
            }
          ]
        }
      ]
    }
  ],
  "apiCredentials": []
}
