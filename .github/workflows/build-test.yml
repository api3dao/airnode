name: Continuous Build

on:
  push:
  pull_request:
    branches:
      - master
    types: [opened, synchronize, reopened]

jobs:
  documentation:
    name: Check documentation
    runs-on: ubuntu-latest
    # Don't run twice for a push within an internal PR
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    steps:
      - name: Clone airnode
        uses: actions/checkout@master
      - name: Check hyperlinks
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          config-file: .github/workflows/mlc_config.json
      - name: Slack Notification
        uses: lazy-actions/slatify@master
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: ${{ failure() && env.SLACK_WEBHOOK_URL != null }}
        with:
          channel: '#technical-notifications'
          commit: true
          job_name: 'Airnode - Documentation'
          token: ${{ secrets.ACCESS_TOKEN }}
          type: ${{ job.status }}
          url: ${{ secrets.SLACK_WEBHOOK_URL }}

  build:
    name: Build and lint Airnode
    runs-on: ubuntu-latest
    # Don't run twice for a push within an internal PR
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    steps:
      - name: Clone airnode
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14.17.1'
      - name: restore lerna
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Install Dependencies
        run: yarn run bootstrap
      - name: Prepare config
        run: |
          cp packages/airnode-deployer/config/config.json.example packages/airnode-deployer/config/config.json
      - name: Build
        run: yarn run build
      - name: Lint code
        run: yarn run lint
      - name: Slack Notification
        uses: lazy-actions/slatify@master
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: ${{ failure() && env.SLACK_WEBHOOK_URL != null }}
        with:
          channel: '#technical-notifications'
          commit: true
          job_name: 'Airnode - Build'
          token: ${{ secrets.ACCESS_TOKEN }}
          type: ${{ job.status }}
          url: ${{ secrets.SLACK_WEBHOOK_URL }}
      - uses: actions/cache@v2
        id: cache-build
        with:
          path: ./*
          key: ${{ github.sha }}

  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14.17.1'
      - run: yarn run test
      - name: Slack Notification
        uses: lazy-actions/slatify@master
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: ${{ failure() && env.SLACK_WEBHOOK_URL != null }}
        with:
          channel: '#technical-notifications'
          commit: true
          job_name: 'Airnode - Unit tests'
          token: ${{ secrets.ACCESS_TOKEN }}
          type: ${{ job.status }}
          url: ${{ secrets.SLACK_WEBHOOK_URL }}

  e2e-tests:
    name: E2E tests
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        package: [admin, node, examples]
    steps:
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14.17.1'
      - name: Start background services
        run: yarn run dev:background
      - run: yarn run test:e2e-${{ matrix.package }}
      - name: Slack Notification
        uses: lazy-actions/slatify@master
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: ${{ failure() && env.SLACK_WEBHOOK_URL != null }}
        with:
          channel: '#technical-notifications'
          commit: true
          job_name: 'Airnode - E2E tests'
          token: ${{ secrets.ACCESS_TOKEN }}
          type: ${{ job.status }}
          url: ${{ secrets.SLACK_WEBHOOK_URL }}

  build-complete:
    name: All tests passed
    runs-on: ubuntu-latest
    needs: [unit-tests, e2e-tests]
    steps:
      - run: exit 0
      - name: Slack Notification
        uses: lazy-actions/slatify@master
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        # env.SLACK_WEBHOOK_URL != null is a workaround dependabot not having access to secrets
        if: ${{ always() && env.SLACK_WEBHOOK_URL != null }}
        with:
          channel: '#technical-notifications'
          commit: true
          job_name: 'Airnode - Continuous Build'
          token: ${{ secrets.ACCESS_TOKEN }}
          type: ${{ job.status }}
          url: ${{ secrets.SLACK_WEBHOOK_URL }}
